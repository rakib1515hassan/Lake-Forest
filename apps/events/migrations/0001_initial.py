# Generated by Django 4.2.7 on 2023-12-04 10:57

from django.conf import settings
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=225)),
                ('banner_image', models.ImageField(blank=True, null=True, upload_to='Event/Banner')),
                ('screen_image', models.ImageField(blank=True, null=True, upload_to='Event/ScreenImage')),
                ('register_team_date', models.DateField()),
                ('select_topic_date', models.DateField()),
                ('faculty_mentor_date', models.DateField()),
                ('submit_whitepaper_date', models.DateField()),
                ('event_info', models.TextField(blank=True, null=True)),
                ('judging_criteria', models.TextField(blank=True, null=True)),
                ('eligibility', models.TextField(blank=True, null=True)),
                ('analysis_rubric', models.TextField(blank=True, null=True)),
                ('paper_guidelines', models.TextField(blank=True, null=True)),
                ('executive_summary', models.TextField(blank=True, null=True)),
                ('Presentation', models.TextField(blank=True, null=True)),
            ],
            options={
                'ordering': ['-created_at', '-updated_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EventsTeam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=225)),
                ('image', models.ImageField(blank=True, null=True, upload_to='Event/TeamImage')),
                ('topic_name', models.CharField(blank=True, max_length=225, null=True)),
                ('invite_user', models.TextField(blank=True, null=True)),
                ('white_paper', django.contrib.postgres.fields.ArrayField(base_field=models.FileField(blank=True, null=True, upload_to='Event/TeamWhitePaper'), size=None)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='event_teams', to='events.event')),
                ('member', models.ManyToManyField(related_name='team_members', to=settings.AUTH_USER_MODEL)),
                ('mentor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team_mentor', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at', '-updated_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EventsSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=225)),
                ('Description', models.TextField(blank=True, null=True)),
                ('date', models.DateField()),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('location', models.CharField(max_length=500)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='event_schedules', to='events.event')),
            ],
            options={
                'ordering': ['-created_at', '-updated_at'],
                'abstract': False,
            },
        ),
    ]
